stages:
  - build_java
  - build_android
  - build
  - build_integ

default:
  tags: [famedly, docker]

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      variables:                              # namespace builds on branches
        VERSION_SUFFIX: "-$CI_COMMIT_REF_SLUG"
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        VERSION_SUFFIX: ""

openjdk:
  # Official docker image.
  image: docker:latest
  stage: build_java
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}/openjdk:latest" -f Dockerfile.openjdk .
    - docker push "${CI_REGISTRY_IMAGE}/openjdk:latest"
  only:
    refs:
        - master
    changes:
        - Dockerfile.openjdk

android:
  # Official docker image.
  image: docker:latest
  stage: build_android
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}/android:latest" --build-arg java_image=$CI_REGISTRY_IMAGE/openjdk:latest -f Dockerfile.android .
    - docker push "${CI_REGISTRY_IMAGE}/android:latest"
  only:
    refs:
        - master
    changes:
        - Dockerfile.android
        - Dockerfile.openjdk

flutter:
  # Official docker image.
  image: docker:latest
  stage: build
  parallel:
    matrix:
      - CHANNEL: stable
        FLUTTER_VERSION: ${FLUTTER_STABLE_VERSION}
      - CHANNEL: beta
        FLUTTER_VERSION: ${FLUTTER_BETA_VERSION}
      - CHANNEL: dev
        FLUTTER_VERSION: ${FLUTTER_DEV_VERSION}
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - export IMAGE_NAME="${CI_REGISTRY_IMAGE}/flutter/${CHANNEL}"
    - docker build --pull -t "${IMAGE_NAME}:latest${VERSION_SUFFIX}" -t "${IMAGE_NAME}:${FLUTTER_VERSION}${VERSION_SUFFIX}" --build-arg flutter_version=$FLUTTER_VERSION --build-arg channel=$CHANNEL --build-arg android_image=$CI_REGISTRY_IMAGE/android:latest -f Dockerfile .
    - docker push "${IMAGE_NAME}:latest${VERSION_SUFFIX}"
    - docker push "${IMAGE_NAME}:${FLUTTER_VERSION}${VERSION_SUFFIX}"

integration:
  # Official docker image.
  image: docker:latest
  stage: build_integ
  services:
    - docker:19.03.1-dind
  variables:
    CHANNEL: stable
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}/integration/${CHANNEL}:${FLUTTER_STABLE_VERSION}${VERSION_SUFFIX}" --build-arg flutter_image="${CI_REGISTRY_IMAGE}/flutter/${CHANNEL}:${FLUTTER_STABLE_VERSION}${VERSION_SUFFIX}" -f Dockerfile.integrationtests .
    - docker push "${CI_REGISTRY_IMAGE}/integration/${CHANNEL}:${FLUTTER_STABLE_VERSION}${VERSION_SUFFIX}"

flutter-alpine:
  image: docker:latest
  stage: build
  services:
    - docker:19.03.1-dind
  variables:
    CHANNEL: stable
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd alpine_flutter
    - export IMAGE_NAME="${CI_REGISTRY_IMAGE}/flutter-alpine/${CHANNEL}"
    - docker build --pull -t "${IMAGE_NAME}:${FLUTTER_STABLE_VERSION}${VERSION_SUFFIX}" --build-arg flutter_version=$FLUTTER_STABLE_VERSION .
    - docker push "${IMAGE_NAME}:${FLUTTER_STABLE_VERSION}${VERSION_SUFFIX}"

flutter-linux:
  image: docker:latest
  stage: build
  services:
    - docker:19.03.1-dind
  variables:
    CHANNEL: stable
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd linux
    - export IMAGE_NAME="${CI_REGISTRY_IMAGE}/flutter-linux/${CHANNEL}"
    - docker build --pull -t "${IMAGE_NAME}:${FLUTTER_STABLE_VERSION}${VERSION_SUFFIX}" --build-arg flutter_version=$FLUTTER_STABLE_VERSION --build-arg channel=$CHANNEL .
    - docker push "${IMAGE_NAME}:${FLUTTER_STABLE_VERSION}${VERSION_SUFFIX}"
