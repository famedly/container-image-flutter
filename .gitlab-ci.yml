stages:
  - build_java
  - build_android
  - build

docker-build-latest-openjdk:
  # Official docker image.
  image: docker:latest
  stage: build_java
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:openjdk" -f Dockerfile.openjdk .
    - docker push "${CI_REGISTRY_IMAGE}:openjdk"
  only:
    refs:
        - master
    changes:
        - Dockerfile.openjdk

docker-build-latest-android:
  # Official docker image.
  image: docker:latest
  stage: build_android
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:android" --build-arg java_image=$CI_REGISTRY_IMAGE:openjdk -f Dockerfile.android .
    - docker push "${CI_REGISTRY_IMAGE}:android"
  only:
    refs:
        - master
    changes:
        - Dockerfile.android
        - Dockerfile.openjdk

docker-build-latest-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" --build-arg flutter_version_url=$CI_FLUTTER_STABLE_VERSION_URL --build-arg android_image=$CI_REGISTRY_IMAGE:android -f Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

docker-build-stable-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:stable" --build-arg flutter_version_url=$CI_FLUTTER_STABLE_VERSION_URL --build-arg android_image=$CI_REGISTRY_IMAGE:android -f Dockerfile .
    - docker push "${CI_REGISTRY_IMAGE}:stable"
  only:
    - master

docker-build-beta-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:beta" --build-arg flutter_version_url=$CI_FLUTTER_BETA_VERSION_URL --build-arg android_image=$CI_REGISTRY_IMAGE:android -f Dockerfile .
    - docker push "${CI_REGISTRY_IMAGE}:beta"
  only:
    - master

docker-build-dev-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:dev" --build-arg flutter_version_url=$CI_FLUTTER_DEV_VERSION_URL --build-arg android_image=$CI_REGISTRY_IMAGE:android -f Dockerfile .
    - docker push "${CI_REGISTRY_IMAGE}:dev"
  only:
    - master

docker-build:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" --build-arg flutter_version_url=$CI_FLUTTER_STABLE_VERSION_URL --build-arg android_image=$CI_REGISTRY_IMAGE:android -f Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master

