stages:
  - build_android
  - build
docker-build-latest-android:
  # Official docker image.
  image: docker:latest
  stage: build_android
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:android || true
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:android_raw" --cache-from $CI_REGISTRY_IMAGE:android -f Dockerfile.android .
    - apk add git jq tar curl && curl -L https://github.com/grycap/minicon/releases/download/1.4-2/minicon_1.4-2-ppa.tar.gz --output ./minicon.tar.gz && tar -xvf ./minicon.tar.gz && ./minicon_1.4-2-ppa/minicon_1.4-2/usr/bin/minidock -i "${CI_REGISTRY_IMAGE}:android_raw" -t "${CI_REGISTRY_IMAGE}:android" --apt
    - docker push "${CI_REGISTRY_IMAGE}:android"
  only:
    - master

docker-build-latest-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE || true
    - docker build --pull -t "$CI_REGISTRY_IMAGE" --cache-from $CI_REGISTRY_IMAGE:latest --build-arg flutter_version_url=$CI_FLUTTER_STABLE_VERSION_URL --build-arg android_image=$CI_REGISTRY_IMAGE:android -f Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

docker-build-stable-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "${CI_REGISTRY_IMAGE}:stable" || true
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:stable" --cache-from $CI_REGISTRY_IMAGE:stable --build-arg flutter_version_url=$CI_FLUTTER_STABLE_VERSION_URL --build-arg android_image=$CI_REGISTRY_IMAGE:android -f Dockerfile .
    - docker push "${CI_REGISTRY_IMAGE}:stable"
  only:
    - master

docker-build-beta-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "${CI_REGISTRY_IMAGE}:beta" || true
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:beta" --cache-from $CI_REGISTRY_IMAGE:beta --build-arg flutter_version_url=$CI_FLUTTER_BETA_VERSION_URL --build-arg android_image=$CI_REGISTRY_IMAGE:android -f Dockerfile .
    - docker push "${CI_REGISTRY_IMAGE}:beta"
  only:
    - master

docker-build-dev-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "${CI_REGISTRY_IMAGE}:dev" || true
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:dev" --cache-from $CI_REGISTRY_IMAGE:dev --build-arg flutter_version_url=$CI_FLUTTER_DEV_VERSION_URL --build-arg android_image=$CI_REGISTRY_IMAGE:android -f Dockerfile .
    - docker push "${CI_REGISTRY_IMAGE}:dev"
  only:
    - master

docker-build:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" --build-arg flutter_version_url=$CI_FLUTTER_STABLE_VERSION_URL --build-arg android_image=$CI_REGISTRY_IMAGE:android -f Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master
